{"version":3,"file":"static/js/453.ee94d276.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchMoviesForm/SearchMoviesForm.module.css?fcd5","components/SearchMoviesForm/SearchMoviesForm.jsx","pages/Movies/Movies.jsx","service/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\",\"item\":\"MovieList_item__tDivI\",\"title\":\"MovieList_title__QyMtJ\",\"wrap\":\"MovieList_wrap__cjF6K\"};","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport css from './MovieList.module.css';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.list}>\n      {movies.map(({ poster_path, title, name, id }) => (\n        <li className={css.item} key={id}>\n          <Link\n            className={css.link}\n            to={`/movies/${id}`}\n            state={{ from: location }}\n          >\n            <div className={css.wrap}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                alt={title ?? name}\n              />\n            </div>\n            <h2 className={css.title}>{title ?? name}</h2>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchMoviesForm_form__gqLJv\",\"btn\":\"SearchMoviesForm_btn__4RKt7\",\"span\":\"SearchMoviesForm_span__tiE6V\",\"input\":\"SearchMoviesForm_input__iixOz\"};","import PropTypes from 'prop-types';\nimport css from './SearchMoviesForm.module.css';\n\nexport const SearchMoviesForm = ({ onFormSubmit, inputChange }) => {\n  return (\n    <form className={css.form} onSubmit={onFormSubmit}>\n      <input className={css.input} onChange={inputChange} />\n      <button className={css.btn} type=\"submit\">\n        <span className={css.span}></span>\n      </button>\n    </form>\n  );\n};\n\nSearchMoviesForm.propTypes = {\n  onFormSubmit: PropTypes.func.isRequired,\n  inputChange: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from '../../service/api';\nimport { MovieList } from '../../components/MovieList/MovieList';\nimport { SearchMoviesForm } from '../../components/SearchMoviesForm/SearchMoviesForm';\n\nconst SearchMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!searchName) return;\n\n    setSearchQuery(searchName);\n    getMovieByQuery(searchName).then(({ results }) => {\n      setMovies(results);\n    });\n  }, [searchName]);\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: searchQuery });\n  };\n\n  const inputChange = event => {\n    setSearchQuery(event.target.value);\n  };\n  return (\n    <>\n      <SearchMoviesForm onFormSubmit={onFormSubmit} inputChange={inputChange} />\n      <MovieList movies={movies} />\n    </>\n  );\n};\n\nexport default SearchMovies;\n","import axios from 'axios';\n\nconst instanceMovie = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'e8cfb2399c5839ccef43fa2b99e0f6a1',\n  },\n});\n\nexport const getTrendingMovie = async () => {\n  const { data } = await instanceMovie.get('/trending/movie/day', {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieByQuery = async (query, page) => {\n  const { data } = await instanceMovie.get('/search/movie', {\n    params: {\n      query,\n      page,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instanceMovie.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instanceMovie.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instanceMovie.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["MovieList","movies","location","useLocation","className","css","map","poster_path","title","name","id","to","state","from","src","alt","SearchMoviesForm","onFormSubmit","inputChange","onSubmit","onChange","type","useState","setMovies","searchQuery","setSearchQuery","useSearchParams","searchParams","setSearchParams","searchName","get","useEffect","getMovieByQuery","then","results","e","preventDefault","query","event","target","value","instanceMovie","axios","baseURL","params","api_key","getTrendingMovie","page","data","getMovieById","getMovieCredits","getMovieReviews"],"sourceRoot":""}