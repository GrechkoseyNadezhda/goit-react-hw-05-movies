{"version":3,"file":"static/js/21.be7adb28.chunk.js","mappings":"yNACA,MAA6B,iCAA7B,EAA2E,iCAA3E,EAAmH,2BAAnH,EAAsJ,4B,SCGzIA,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OAAuB,IAAnBA,EAAQC,QACH,iEAGP,eAAIC,UAAWC,EAAf,SACGH,EAAQI,KAAI,gBCRQC,EDQLC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAAIC,EAAxB,EAAwBA,WAAxB,OACX,gBAAIP,UAAWC,EAAf,WACE,gBAAID,UAAWC,EAAf,qBAAmCG,MACnC,0BACE,iBAAMJ,UAAWC,EAAjB,0BAA+C,KCZhCE,EDaHI,GCZfC,EAAAA,EAAAA,GAAO,IAAIC,KAAKN,GAAO,KAAM,CAAEO,WAAW,SDczC,uBAAIL,MAN8BC,EADzB,KAYlB,E,SEGD,EApBgB,WACd,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOf,EAAP,KAAgBgB,EAAhB,KAQA,IANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBL,GAASM,MAAK,SAAAC,GAC5BJ,EAAWI,EACZ,GACF,GAAE,CAACP,IAECb,EAGL,OACE,+BACE,SAACD,EAAD,CAAcC,QAASA,EAAQqB,WAGpC,C,sLCrBKC,E,OAAgBC,EAAAA,OAAa,CACjCC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAgB,mCAAG,sGACPL,EAAcM,IAAI,sBAAuB,CAC9DH,OAAQ,CACNI,KAAM,KAHoB,uBACtBT,EADsB,EACtBA,KADsB,kBAMvBA,GANuB,2CAAH,qDAShBU,EAAe,mCAAG,WAAOC,EAAOF,GAAd,yFACNP,EAAcM,IAAI,gBAAiB,CACxDH,OAAQ,CACNM,MAAAA,EACAF,KAAAA,KAJyB,uBACrBT,EADqB,EACrBA,KADqB,kBAOtBA,GAPsB,2CAAH,wDAUfY,EAAY,mCAAG,WAAMxB,GAAN,yFACHc,EAAcM,IAAd,iBAA4BpB,IADzB,uBAClBY,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZa,EAAe,mCAAG,WAAMzB,GAAN,yFACNc,EAAcM,IAAd,iBAA4BpB,EAA5B,aADM,uBACrBY,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfF,EAAe,mCAAG,WAAMV,GAAN,yFACNc,EAAcM,IAAd,iBAA4BpB,EAA5B,aADM,uBACrBY,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieReviews/MovieReviews.module.css?a938","components/MovieReviews/MovieReviews.jsx","service/formatDate.js","pages/Reviews/Reviews.jsx","service/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"listReview\":\"MovieReviews_listReview__4zbAj\",\"itemReview\":\"MovieReviews_itemReview__M9JM6\",\"date\":\"MovieReviews_date__waMun\",\"title\":\"MovieReviews_title__h+X1K\"};","import PropTypes from 'prop-types';\nimport { formatDate } from 'service/formatDate';\nimport css from './MovieReviews.module.css';\n\nexport const MovieReviews = ({ reviews }) => {\n  if (reviews.length === 0) {\n    return <p>There are no reviews for this movie.</p>;\n  }\n  return (\n    <ul className={css.listReview}>\n      {reviews.map(({ author, content, id, created_at }) => (\n        <li className={css.itemReview} key={id}>\n          <h3 className={css.title}>Author: {author}</h3>\n          <p>\n            <span className={css.date}>Review date:</span>{' '}\n            {formatDate(created_at)}\n          </p>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieReviews.propTypes = {\n  reviews: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import { format } from 'date-fns';\n\nexport function formatDate(date) {\n  return format(new Date(date), 'PP', { addSuffix: true });\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MovieReviews } from '../../components/MovieReviews/MovieReviews';\nimport { getMovieReviews } from 'service/api';\n\nconst Reviews = () => {\n  const { idMovie } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    getMovieReviews(idMovie).then(data => {\n      setReviews(data);\n    });\n  }, [idMovie]);\n\n  if (!reviews) {\n    return;\n  }\n  return (\n    <>\n      <MovieReviews reviews={reviews.results} />\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst instanceMovie = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'e8cfb2399c5839ccef43fa2b99e0f6a1',\n  },\n});\n\nexport const getTrendingMovie = async () => {\n  const { data } = await instanceMovie.get('/trending/movie/day', {\n    params: {\n      page: 1,\n    },\n  });\n  return data;\n};\n\nexport const getMovieByQuery = async (query, page) => {\n  const { data } = await instanceMovie.get('/search/movie', {\n    params: {\n      query,\n      page,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instanceMovie.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instanceMovie.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instanceMovie.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["MovieReviews","reviews","length","className","css","map","date","author","content","id","created_at","format","Date","addSuffix","idMovie","useParams","useState","setReviews","useEffect","getMovieReviews","then","data","results","instanceMovie","axios","baseURL","params","api_key","getTrendingMovie","get","page","getMovieByQuery","query","getMovieById","getMovieCredits"],"sourceRoot":""}